<?php

/**
 * Implements of hook_menu();
 */
function sbadmin2_helper_menu() {
    $items = array();
    $items['sbadmin2-login'] = array(
        'title' => 'Login',
        'description' => 'Login Page.',
        'page callback' => 'sbadmin2_helper_login_page_callback',
        'access callback' => false,
        // 'access callback' => 'user_is_anonymous',
        'weight' => -5,
        // 'menu_name' => 'main-menu',
        // 'type' => MENU_NORMAL_ITEM,
        'type' => MENU_CALLBACK,
    );
    $items['sbadmin2-front'] = array(
        'title' => 'Front',
        'description' => 'Front Page.',
        'page callback' => 'sbadmin2_helper_front_page_callback',
        'access callback' => true,
        'weight' => -10,
        'type' => MENU_CALLBACK,
    );
    $items['sbadmin2-dashboard'] = array(
        'title' => 'Dashboard',
        'description' => 'Dashboard.',
        'page callback' => 'sbadmin2_helper_dashboard_page_callback',
        'access callback' => 'user_is_logged_in',
        'weight' => -10,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

/**
 * Implements of hook_form_FORM_ID_alter().
 */
function sbadmin2_helper_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
    $form['front_page']['site_frontpage']['#disabled'] = true;
    $form['front_page']['site_frontpage']['#description'] = t('This value take over by sbadmin2_helper module.');
}

/**
 * Callback of /login.
 */
function sbadmin2_helper_login_page_callback() {
    global $user;
    if ($user->uid) {
        return drupal_goto();
    }
    $block = block_load('user', 'login');
    return _block_get_renderable_array(_block_render_blocks(array($block)));
}

/**
 * Implements of hook_form_FORM_ID_alter.
 * Form ID: user_login_block.
 */
function sbadmin2_helper_form_user_login_block_alter(&$form, &$form_state) {
    // $debugname = 'form'; $debugfile = 'debug.html'; $debugvariable = '|||wakwaw|||'; if (array_key_exists($debugname, get_defined_vars())) { $debugvariable = $$debugname; } elseif (isset($this) && property_exists($this, $debugname)) { $debugvariable = $this->{$debugname}; $debugname = '$this->' . $debugname; } if ($debugvariable !== '|||wakwaw|||') { ob_start(); echo "\r\n<pre>" . basename(__FILE__ ). ":" . __LINE__ . " (Time: " . date('c') . ", Direktori: " . dirname(__FILE__) . ")\r\n". 'var_dump(' . $debugname . '): '; var_dump($debugvariable); echo "</pre>\r\n"; $debugoutput = ob_get_contents();ob_end_clean(); file_put_contents($debugfile, $debugoutput, FILE_APPEND); }
    // $form['name']['#type'] = 'sbadmin2_textfield3';
    // $form['pass']['#type'] = 'sbadmin2_password3';
    // $form['actions']['submit']['#type'] = 'sbadmin2_submit3';
    // $form['actions']['#weight'] = null;
    // $form['name']['#attributes']['placeholder'] = $form['name']['#title'];
    // $form['pass']['#title_display'] = 'invisible';
    // $form['pass']['#attributes']['placeholder'] = $form['pass']['#title'];
}

/**
 * Callback of /front.
 */
function sbadmin2_helper_front_page_callback() {
    global $user;
    if ($user->uid) {
        menu_set_active_item('user/' . $user->uid);
        return menu_execute_active_handler(NULL, FALSE);
    }
    else {
        // Todo: form spesial login.
        // dengan alternative login melalui sosmed.
        return drupal_get_form('user_login');
    }
}

/**
 * Callback of /front.
 */
function sbadmin2_helper_dashboard_page_callback() {
    return 'Coming Soon.';
}



/**
 * Implements of hook_element_info().
 */
function sbadmin2_helper_element_info() {
    $reference = system_element_info();
    $types['sbadmin2_textfield3'] = $reference['textfield'];
    $types['sbadmin2_textfield3']['#theme'] = 'sbadmin2_textfield3';
    $types['sbadmin2_textfield3']['#theme_wrappers'] = array('sbadmin2_form_element');
    $types['sbadmin2_password3'] = $reference['password'];
    $types['sbadmin2_password3']['#theme'] = 'sbadmin2_password3';
    $types['sbadmin2_password3']['#theme_wrappers'] = array('sbadmin2_form_element');
    $types['sbadmin2_submit3'] = $reference['submit'];
    $types['sbadmin2_submit3']['#theme_wrappers'] = array('sbadmin2_submit3');
    return $types;
}

function sbadmin2_helper_element_info_alter(&$type) {

}

/**
 * Implements hook_theme().
 */
function sbadmin2_helper_theme() {
    return array(
        'sbadmin2_textfield3' => array(
            'render element' => 'element',
            'file' => 'sbadmin2_helper.theme.inc',
        ),
        'sbadmin2_password3' => array(
            'render element' => 'element',
            'file' => 'sbadmin2_helper.theme.inc',
        ),
        'sbadmin2_form_element' => array(
            'render element' => 'element',
            'template' => 'sbadmin2-form-element',
            'file' => 'sbadmin2_helper.theme.inc',
        ),
        'sbadmin2_submit3' => array(
            'render element' => 'element',
            'file' => 'sbadmin2_helper.theme.inc',
        ),
    );
}


/**
 * Implements hook_preprocess_html().
 */
function sbadmin2_helper_preprocess_html(&$variables) {
    global $theme;
    if ($theme !== 'sbadmin2') {
        return;
    }
    $html_tag = array(
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'viewport',
        'content' => 'width=device-width, initial-scale=1',
      ),
    );
    drupal_add_html_head($html_tag, 'viewport');
}

/**
 * Implements hook_library_alter().
 */
function sbadmin2_helper_library_alter(&$libraries, $module) {
    global $theme;
    if ($theme !== 'sbadmin2') {
        return;
    }
    if (!path_is_admin(current_path())) {
        $libraries['jquery']['version'] = '3.3.1';
        $libraries['jquery']['js']['misc/jquery.js']['data'] = drupal_get_path('module', 'sbadmin2_helper').'/vendor/jquery/3.3.1/jquery.min.js';
    }
}

/**
 * Implements hook_js_alter().
 */
function sbadmin2_helper_js_alter(&$javascript) {
    global $theme;
    if ($theme !== 'sbadmin2') {
        return;
    }
    foreach ($javascript as $key => &$value) {
        switch ($key) {
            default:
                $value['scope'] = 'footer';
                break;
        }
    }
}